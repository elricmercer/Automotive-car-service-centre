/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apucsc_1.pkg2;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Random;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ZAHIRUL
 */
public class GUI_51 extends javax.swing.JFrame {

    /**
     * Creates new form GUI_51
     */
    private String name;
    private String email;
    private String phoneNumber;
    private String day;
    private int startTime;
    private int finishTime;
    private boolean check;
    
    DefaultListModel dm = new DefaultListModel();
    DefaultListModel dm2 = new DefaultListModel();
    
    public GUI_51() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ASSIGN JOB");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 388));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("TECHNICIAN");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setText("ENTER CUSTOMER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton2.setText("CLOSE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon("F:\\yr 2 semester 1\\OODJ\\Assignment\\APU car service centre 1.2\\final\\APU Automotive car service centre\\icons\\converted\\manager ui.png")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLabel2))
                                    .addComponent(jButton1)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(jButton2))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(82, 82, 82))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("TECHNICIAN'S ID:");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("WORKING ON THE DAY AND TIME");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("ALL TECHNICIANS");

        jScrollPane3.setViewportView(jList1);

        jScrollPane4.setViewportView(jList2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel4)
                                .addGap(91, 91, 91)
                                .addComponent(jLabel5))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 66, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        //CLOSE***********************************************************
        setVisible(false);
        new GUI_2().setVisible(true);
        
        //CLOSE***********************************************************
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        //CUSTOMER*********************************************************
        name = JOptionPane.showInputDialog("Enter Customer Name");
        email = JOptionPane.showInputDialog("Enter Email");
        phoneNumber = JOptionPane.showInputDialog("Enter Phone Number");
        if(!name.equals(null))
            if(!email.equals(null))
                if(!phoneNumber.equals(null))
                {
                    day = JOptionPane.showInputDialog("Enter day - [MON,TUE,WED,THUR,FRI]");
                    if(day.equalsIgnoreCase("MON")||day.equalsIgnoreCase("TUE")||day.equalsIgnoreCase("WED")||day.equalsIgnoreCase("THUR")||day.equalsIgnoreCase("FRI"))
                    {
                        String a = JOptionPane.showInputDialog("Enter Time [2PM - 9PM]");
                        startTime = Integer.parseInt(a);
                        finishTime = startTime+1;
                        if(startTime==2||startTime==3||startTime==4||startTime==5||startTime==6||startTime==7||startTime==8||startTime==9)
                        {
                            check = true;
                        }
                        else
                            JOptionPane.showMessageDialog(this, "WRONG INPUT!!");
                    }
                    else
                        JOptionPane.showMessageDialog(this, "WRONG INPUT!!");
                }
        else
                {
                    setVisible(false);
                    new GUI_4().setVisible(true);
                }
        if(check)
        {
            for(int i=0;i<APUCSC_12.allHeavyDuty.size();i++)
            {
                if(APUCSC_12.allHeavyDuty.get(i).getDay().equals(day) && APUCSC_12.allHeavyDuty.get(i).getBeginTime()==startTime && APUCSC_12.allHeavyDuty.get(i).getEndTime()==finishTime)
                {
                    jList1.setModel(dm2);
                    dm2.addElement(APUCSC_12.allHeavyDuty.get(i).getWorker().getUserId());
                }
            }
            for(int i=0;i<APUCSC_12.allTechs.size();i++)
            {
                jList2.setModel(dm);
                dm.addElement(APUCSC_12.allTechs.get(i).getUserId());
            }
        }
        else
            JOptionPane.showMessageDialog(this,"Enter Customer Details first!!");
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        //TECHS ID*********************************************************
        if(check)
        {
            String inTechId = jTextField1.getText().trim();
            boolean flag = false,flag_2 = false;
            String ticketNumber="";
            String ID = "";
            Random rnd = new Random();
            for(int i=0;i<APUCSC_12.allHeavyDuty.size();i++)
            {
                if(APUCSC_12.allHeavyDuty.get(i).getDay().equals(day) & APUCSC_12.allHeavyDuty.get(i).getBeginTime()==startTime & APUCSC_12.allHeavyDuty.get(i).getEndTime()==finishTime)
                {
                    String a = APUCSC_12.allHeavyDuty.get(i).getWorker().getUserId();
                    if(a.equals(inTechId))
                    {
                        JOptionPane.showMessageDialog(this, "TECHNICIANS BOOKED OR WORKING AT THAT TIME AND DAY!!");
                        flag = true;
                        break;
                    }
                }
            }
            if(flag==false)
            {
                boolean cusList = APUCSC_12.allCustomer.isEmpty();
                if(cusList==true)
                {
                    int ran = rnd.nextInt(1000)+1;
                    String sran = String.valueOf(ran); 
                    ID = sran;
                }
                else
                {
                    for(int i=0;i<APUCSC_12.allCustomer.size();i++)
                    {
                        int ran = rnd.nextInt(1000)+1;
                        String sran = String.valueOf(ran);
                        if(!APUCSC_12.allCustomer.get(i).getId().equals(sran))
                        {
                            ID = sran;
                            break;
                        }
                    }
                }
                String a = JOptionPane.showInputDialog("You charge is RM300");
                int b = Integer.parseInt(a);
                if(b>300)
                {
                    JOptionPane.showMessageDialog(this, "You change is RM"+ (b-300));
                    boolean ticketList = APUCSC_12.allTicket.isEmpty();
                    if(ticketList==true)
                    {
                        int ran = rnd.nextInt(1000)+1;
                        flag_2 = true;
                        ticketNumber = "CS"+ran;
                    }
                    else
                    {
                        for(int i=0;i<APUCSC_12.allTicket.size();i++)
                        {
                            int ran = rnd.nextInt(1000)+1;
                            String c = APUCSC_12.allTicket.get(i).getTicketNumber();
                            int len = c.length();
                            String d = c.substring(2,len);
                            int oldTicket = Integer.parseInt(d);
                            if(ran!=oldTicket)
                            {
                                flag_2 = true;
                                ticketNumber = "CS"+ran;
                                break;
                            }
                        }
                    }
                }
                else
                {
                    if(b<300)
                    {
                        JOptionPane.showMessageDialog(this, "You have paid RM"+ (300-b) +" less" );
                    }
                    int newCharge;
                    newCharge = 300-b;
                    while(newCharge>0)
                    {
                        String c = JOptionPane.showInputDialog("You charge is RM"+newCharge);
                        int d = Integer.parseInt(c);
                        newCharge = newCharge-d;
                    }
                    if(newCharge==0)
                    {
                        boolean ticketList = APUCSC_12.allTicket.isEmpty();
                        if(ticketList==true)
                        {
                            int ran = rnd.nextInt(1000)+1;
                            flag_2 = true;
                            ticketNumber = "CS"+ran;
                        }
                        else
                        {
                            for(int i=0;i<APUCSC_12.allTicket.size();i++)
                            {
                                int ran = rnd.nextInt(1000)+1;
                                String c = APUCSC_12.allTicket.get(i).getTicketNumber();
                                int len = c.length();
                                String d = c.substring(2,len);
                                int oldTicket = Integer.parseInt(d);
                                if(ran!=oldTicket)
                                {
                                    flag_2 = true;
                                    ticketNumber = "CS"+ran;
                                    break;
                                }
                            }
                        }
                    }
                    else if(newCharge<0)
                    {
                        JOptionPane.showMessageDialog(this,"You change is RM"+(newCharge*-1));
                        boolean ticketList = APUCSC_12.allTicket.isEmpty();
                        if(ticketList==true)
                        {
                            int ran = rnd.nextInt(1000)+1;
                            flag_2 = true;
                            ticketNumber = "CS"+ran;
                        }
                        else
                        {
                            for(int i=0;i<APUCSC_12.allTicket.size();i++)
                            {
                                int ran = rnd.nextInt(1000)+1;
                                String c = APUCSC_12.allTicket.get(i).getTicketNumber();
                                int len = c.length();
                                String d = c.substring(2,len);
                                int oldTicket = Integer.parseInt(d);
                                if(ran!=oldTicket)
                                {
                                    flag_2 = true;
                                    ticketNumber = "CS"+ran;
                                    break;
                                }
                            }
                        }
                    }
                }
                    if(flag_2=true)
                    {
                    JOptionPane.showMessageDialog(this, "CUSTOMER ID: "+ID+ " TICKET NO.: "+ticketNumber+" Your TECHNICIAN: "+inTechId);
                    try
                    {
                        Customer cus = new Customer(ID,name,email,phoneNumber);
                        APUCSC_12.allCustomer.add(cus);
                        PrintWriter pw = new PrintWriter("customer.txt");
                        for(int i=0;i<APUCSC_12.allCustomer.size();i++)
                        {
                            pw.println(APUCSC_12.allCustomer.get(i).getId());
                            pw.println(APUCSC_12.allCustomer.get(i).getName());
                            pw.println(APUCSC_12.allCustomer.get(i).getEmail());
                            pw.println(APUCSC_12.allCustomer.get(i).getPhoneNo());
                            pw.println();
                        }
                        pw.flush();
                        pw.close();
                    }
                    catch(Exception e)
                    {

                    }
                    try
                    {
                        for(int i=0;i<APUCSC_12.allCustomer.size();i++)
                        {
                            if(name.equals(APUCSC_12.allCustomer.get(i).getName()))
                            {
                                APUCSC_12.customerName = APUCSC_12.allCustomer.get(i);
                                break;
                            }
                        }
                        for(int i=0;i<APUCSC_12.allCustomer.size();i++)
                        {
                            if(ID.equals(APUCSC_12.allCustomer.get(i).getId()))
                            {
                                APUCSC_12.customerID = APUCSC_12.allCustomer.get(i);
                                break;
                            }
                        }
                        for(int i=0;i<APUCSC_12.allTechs.size();i++)
                        {
                            if(inTechId.equals(APUCSC_12.allTechs.get(i).getUserId()))
                            {
                                APUCSC_12.techs = APUCSC_12.allTechs.get(i);
                                break;
                            }
                        }
                        Ticket ticket = new Ticket(ticketNumber,"100",APUCSC_12.customerName,APUCSC_12.customerID,APUCSC_12.techs);
                        APUCSC_12.allTicket.add(ticket);
                        PrintWriter pw = new PrintWriter("ticket.txt");
                        for(int i=0;i<APUCSC_12.allTicket.size();i++)
                        {
                            pw.println(APUCSC_12.allTicket.get(i).getTicketNumber());
                            pw.println(APUCSC_12.allTicket.get(i).getCharge());
                            pw.println(APUCSC_12.allTicket.get(i).getCustomer().getName());
                            pw.println(APUCSC_12.allTicket.get(i).getId().getId());
                            pw.println(APUCSC_12.allTicket.get(i).getWorker().getUserId());
                            pw.println();
                        }
                        pw.flush();
                        pw.close();
                    }
                    catch(Exception e)
                    {

                    }
                    try
                    {
                        for(int i=0;i<APUCSC_12.allTechs.size();i++)
                        {
                            if(inTechId.equals(APUCSC_12.allTechs.get(i).getUserId()))
                            {
                                APUCSC_12.techs = APUCSC_12.allTechs.get(i);
                                break;
                            }
                        }
                        for(int i=0;i<APUCSC_12.allTicket.size();i++)
                        {
                            if(ticketNumber.equals(APUCSC_12.allTicket.get(i).getTicketNumber()))
                            {
                                APUCSC_12.ticket = APUCSC_12.allTicket.get(i);
                                break;
                            }
                        }
                        for(int i=0;i<APUCSC_12.allCustomer.size();i++)
                        {
                            if(name.equals(APUCSC_12.allCustomer.get(i).getName()))
                            {
                                APUCSC_12.customerName = APUCSC_12.allCustomer.get(i);
                                break;
                            }
                        }
                        for(int i=0;i<APUCSC_12.allCustomer.size();i++)
                        {
                            if(ID.equals(APUCSC_12.allCustomer.get(i).getId()))
                            {
                                APUCSC_12.customerID = APUCSC_12.allCustomer.get(i);
                                break;
                            }
                        }
                        HeavyDuty hd = new HeavyDuty(APUCSC_12.techs,day,startTime,finishTime,APUCSC_12.ticket,APUCSC_12.customerName,APUCSC_12.customerID);
                        APUCSC_12.allHeavyDuty.add(hd);
                        PrintWriter pw = new PrintWriter("heavy_duty.txt");
                        for(int i=0;i<APUCSC_12.allHeavyDuty.size();i++)
                        {
                            pw.println(APUCSC_12.allHeavyDuty.get(i).getWorker().getUserId());
                            pw.println(APUCSC_12.allHeavyDuty.get(i).getDay());
                            pw.println(APUCSC_12.allHeavyDuty.get(i).getBeginTime());
                            pw.println(APUCSC_12.allHeavyDuty.get(i).getEndTime());
                            pw.println(APUCSC_12.allHeavyDuty.get(i).getTicketNumber().getTicketNumber());
                            pw.println(APUCSC_12.allHeavyDuty.get(i).getCusName().getName());
                            pw.println(APUCSC_12.allHeavyDuty.get(i).getCusID().getId());
                            pw.println();
                        }
                        pw.flush();
                        pw.close();
                    }
                    catch(Exception e)
                    {

                    }
                    setVisible(false);
                    new GUI_2().setVisible(true);
                }
            }
              
        }
        else
            JOptionPane.showMessageDialog(this,"Enter Customer Details First!!");
        
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_51.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_51.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_51.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_51.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_51().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
